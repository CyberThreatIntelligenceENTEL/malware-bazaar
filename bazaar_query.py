#!/usr/bin/env python3
import requests
import json
import argparse
from jq import jq

__author__ = "Pablo Araya del Pino - Entel CyberSecure"
__copyright__ = "Copyright 2022, Pablo Araya del Pino"
__license__ = "Creative Commons Attribution-ShareAlike 4.0 International License."
__version__ = "2.0"

parser = argparse.ArgumentParser(description='Query sample information by tag or signature on Malware Bazaar by abuse.ch')
parser.add_argument('-t', '--type', help='Query type (tag or signature)', type=str, metavar="TYPE", default="tag", choices=["tag", "signature"], required=True)
parser.add_argument('-q', '--query', help='Query value (e.g. trickbot, exe)', type=str, metavar="QUERY", required=True)
parser.add_argument('-l', '--limit', help='Max number of results you want to display (default: 100, max: 1000)', type=str, metavar='LIMIT', required=False)
parser.add_argument('-f', '--field', help='Single field you want', type=str, metavar="FIELD", required=False, choices=['sha256_hash', 'sha1_hash', 'md5_hash', 'file_name', 'signature', 'imphash'])
parser.add_argument('-d', '--date', help='Show First Seen date', type=str, metavar="DATE", required=False, choices=['true'])


args = parser.parse_args()

if args.limit is None:
    args.limit = '100'

if(args.date == "true"):
    args.date = "first_seen"

#print(args)

if(args.type == "tag"):
    data = {
        'query': 'get_taginfo',
        'tag': ''+args.query+'',
        'limit': ''+args.limit+'',
    }
else:
    data = {
        'query': 'get_siginfo',
        'signature': ''+args.query+'',
        'limit': ''+args.limit+'',
    }

response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, timeout=15)
json_response = response.content.decode("utf-8", "ignore")

#print(json_response)

if(args.field):
    query = ".data[]." + args.field
    json_response_field = jq(query).transform(text=json_response, text_output=True)

if(args.date):
    query = ".data[]." +args.date 
    dates_response = jq(query).transform(text=json_response, text_output=True).replace('"', '').split("\n")
    field_response = json_response_field.replace('"', '').split("\n")

    try:
        for i in range(int(args.limit)):
            print(args.field + ': ' + field_response[i] + '   date: ' + dates_response[i])
    except:
        print('End')

else:
    print(json_response_field.replace('"', ''))
